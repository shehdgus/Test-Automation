{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 10}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_login_landing", "rerun": "0"}, "1": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_login", "rerun": "0"}, "2": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_mycoupang_landing", "rerun": "0"}, "3": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_modify_landing", "rerun": "0"}, "4": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_checkpw", "rerun": "0"}, "5": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_dam", "rerun": "0"}, "6": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_modify_address", "rerun": "0"}, "7": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_modify_info", "rerun": "0"}, "8": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_modify_back", "rerun": "0"}, "9": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_login_landing>>\n\n    @pytest.fixture(scope=\"class\")\n    def setup(request):\n        browser_name = request.config.getoption(\"browser_name\")\n        if browser_name == \"chrome\":\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=ChromeOptions) # \ud06c\ub86c\n\ntests\\conftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A403494860>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n>       browser = self._options.capabilities[\"browserName\"]\nE       TypeError: 'property' object is not subscriptable\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:56: TypeError\n", "test_name": "test_order_sort", "rerun": "0"}}, "suite_name": "tests/test_MyCoupang.py"}}}, "date": "October 06, 2024", "start_time": 1728209513.759396, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "10", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "10"}